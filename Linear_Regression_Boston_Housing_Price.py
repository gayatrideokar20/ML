# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ItNmvV94_BA5CiDNW3vok8gF6w4MtA2n
"""

import pandas as pd
import numpy as np
from sklearn import linear_model
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder, OneHotEncoder

from sklearn.datasets import load_boston
boston=load_boston()
#print(boston)

df_x=pd.DataFrame(boston.data, columns=boston.feature_names)
df_y=pd.DataFrame(boston.target)
#df_x.describe()


x_train, x_test, y_train, y_test=train_test_split(df_x, df_y,test_size=0.33,random_state=42)
rg=linear_model.LinearRegression()
rg.fit(x_train, y_train)
#print(rg.coef_)#f(x)=mx+c here coef are m vals or f(x,a)=mx+da+b coef are m and a

y_pred=rg.predict(x_test)
print(y_pred)
print(y_test)
'''print(x_test.shape)
print(x_train.shape)
print(y_test.shape)
print(y_train.shape)'''

print(mean_squared_error(y_test,y_pred))




plt.scatter(y_test, y_pred, c = 'green') 
plt.xlabel("Price: in $1000's") 
plt.ylabel("Predicted value") 
plt.title("True value vs predicted value : Linear Regression") 
plt.show()